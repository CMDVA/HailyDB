SPC Fetching Methodology (New Section)
Source:
Endpoint: https://www.spc.noaa.gov/climo/reports/today.csv

Also fetch by archive date: https://www.spc.noaa.gov/climo/reports/YYYYMMDD_rpts_hail.csv, wind.csv, tornado.csv

Frequency:
Daily fetch: Trigger at 00:05 UTC for previous day’s full report

Optional: intra-day updates every 3 hours if system supports it (fallback to once daily if under load)

Method:
Use requests.get() or aiohttp for async batch fetches

Validate CSV structure before parsing (column names, header presence)

Store raw CSV in spc_raw table (optional archive)

Parse to structured spc_reports table with fields:

event_type: enum ("hail", "wind", "tornado")

magnitude: float

location: string

lat, lon: float

datetime: UTC timestamp

source: string (e.g., "trained spotter", "public", etc.)

comments: text

spc_id: autogenerated PK or hash of (time + lat + lon)

Error Handling:
Log missing or malformed files (404s, 500s)

Fallback to retry logic with exponential backoff

Raise alert if CSV schema changes

Verification Logic (tie-in to alerts):
Link reports to alerts via:

Geographic radius ≤ 20 miles

Time window ±2 hours

Matching event_type logic:

“Tornado Warning” ↔ tornado

“Severe Thunderstorm Warning” ↔ hail/wind

Store matches in spc_reports JSONB field on the Alert table (if embedded), or via foreign key join

SPC ingestion requires specific dependencies, and they must be added to requirements.txt or pyproject.toml depending on the project structure. Here's the exact list, with justifications:

✅ Required Dependencies for SPC Fetching & Processing
1. requests
Purpose: Fetching SPC CSVs over HTTP

bash
Copy
Edit
requests>=2.31.0
2. pandas
Purpose: Robust CSV parsing, filtering, and deduplication

bash
Copy
Edit
pandas>=2.2.2
Pandas is faster and safer than csv.reader when dealing with malformed data, inconsistent headers, or legacy files.

3. (Optional) aiohttp + asyncio
Use only if you implement concurrent SPC fetching

bash
Copy
Edit
aiohttp>=3.9.5
4. (Optional but recommended) python-dateutil
Purpose: Easier parsing of SPC timestamp formats

bash
Copy
Edit
python-dateutil>=2.9.0
🧪 Testing / Local Dev Tools (Optional)
Include if you are validating SPC fetch in isolation:

pytest – test suite

ipython or jupyter – interactive validation